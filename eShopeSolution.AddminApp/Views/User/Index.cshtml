@using eShopSolution.ViewModels.Common;
@using eShopSolution.ViewModels.System.Users;

@model PagedResult<UserVm>

@{
    ViewData["Title"] = "Danh sách người dùng";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <h1 class="mt-4">Danh sách người dùng</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="/">Trang chủ</a></li>
        <li class="breadcrumb-item active">Danh sách người dùng</li>
    </ol>

    <div class="card mb-12">
        <div class="card-header">

            <div class="row">
                <div class="col-md-6"><a class="btn btn-success" asp-action="Create" asp-controller="User">Tạo mới</a></div>

                <div class="col-md-6">
                    <!--md có nghĩa là midium-->
                    <form asp-action="Index" method="get">
                        <div class="row">
                            <!-- Method là get nó sẽ chuyền tham số trên query-->
                            <div class="col-md-9">
                                <input type="text" value="@ViewBag.keyword " name="keyword" class="form-control" /> <!--name =keword chính là tham số-->
                                <!--để value là  ViewBag.keyword  để nó giữ được giá trị key trên ô tìm kiếm , ViewBag.keyword  được lấy từ controller tương ứng-->
                            </div>
                            <div class="col-md-3">
                                <button type="submit" class="btn btn-primary">Tìm</button>
                                <button type="button" onclick="window.location.href='/User/Index'" class="btn btn-secondary">Tải Lại</button>  <!-- khi click thì nó đến đường dẫn kia như kiểu đi lại trang nên gọi là reset-->
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead>
                        <tr>

                            <th>
                                Tên
                            </th>
                            <th>
                                Họ
                            </th>
                            <th>
                                Số điện thoại
                            </th>
                            <th>
                                Tài khoản
                            </th>
                            <th>
                                Email
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Items) //<!-- Model.Items là ra được list-->
                        {
                            <tr>

                                <td>
                                    @Html.DisplayFor(modelItem => item.FirstName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.LastName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.UserName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Email)
                                </td>
                                <td>
                                    <!--id ở đây là biến mặc định trong cái Routing của chúng ta , nhơ phải thêm id vào để nó biding suống ko thì thiếu nó chả chạy đau -->
                                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |   <!--bên hàm Edit Details và Delete ta cần chuyền vào id lấy từ request lên chỗ này cũng cần chuyền-->
                                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <!-- vào đây mà đọc cách sử dụng Tag Helper-->
            <!--https://docs.microsoft.com/en-us/aspnet/core/mvc/views/view-components?view=aspnetcore-3.1-->
            @await Component.InvokeAsync("Pager", Model)
        </div>
    </div>
</div>